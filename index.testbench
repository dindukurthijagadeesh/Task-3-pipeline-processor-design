module tb_pipeline;

    reg clk;
    simple_pipeline_cpu cpu(clk);

    // Generate clock
    always #5 clk = ~clk;

    initial begin
        clk = 0;

        // Initialize program and data memory
        // LOAD R1, [R2 + 2]
        cpu.instr_mem[0] = 16'b0011_0001_0010_0010;
        // ADD R3, R1, R2
        cpu.instr_mem[1] = 16'b0001_0011_0001_0010;
        // SUB R4, R3, R1
        cpu.instr_mem[2] = 16'b0010_0100_0011_0001;

        // Init registers
        cpu.regfile[2] = 8'd5;  // R2
        cpu.data_mem[7] = 8'd20;  // Memory at 5+2

        #100 $finish;
    end

endmodule
